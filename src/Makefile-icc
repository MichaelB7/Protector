MAKE=make
#COMPILER=GCC_MINGW64
COMPILER=icc

#CLEAN_CMD=@rm -f *.o *.bak *.bin *.lrn game.* log.* *~ .#*
CLEAN_CMD=rm -f *.o *.gcda

ifeq ($(COMPILER),GCC_MINGW64)
   CC=x86_64-w64-mingw32-gcc
   CPPC=x86_64-w64-mingw32-g++
   LN=x86_64-w64-mingw32-g++
else
   CC=icc
   CPPC=icc -w0
   LN=icc
   CFLAGS = -ansi -O3  -DNDEBUG -DTARGET_LINUX -DSUPPORT_SMP
endif

#CFLAGS=  -O3 -Wall -ansi -pedantic -Wno-long-long -pthread  -DNDEBUG
protectordbg: CFLAGS=-Wall -ansi -pedantic -Wno-long-long -pthread

protectorobjects = protector.o bitboard.o position.o fen.o io.o \
                   movegeneration.o matesearch.o keytable.o hash.o test.o \
                   pgn.o tools.o search.o evaluation.o coordination.o \
                   xboard.o book.o

protectorsources = $(protectorobjects:.o=.c)

.c.o:
	$(CC) $(CFLAGS) -c $*.c
#
#.cpp.o:
#./protector	$(CPPC) $(CPPFLAGS) -O3  -c $*.cpp

protector: $(protectorobjects)
	$(LN) -lstdc++   -pthread  -o Protector $(protectorobjects)

protectordbg: $(protectorobjects)
	$(LN) -lstdc++ -lm -pthread -static -flto -o Protector $(protectorobjects)

pgogen:
	$(MAKE) -j \
#opt=' ' \
	CFLAGS=+ '-prof-use -O3 -Wall -ansi -pedantic -Wno-long-long -pthread -DNDEBUG' \
	LDFLAGS= '-pthread -lstdc++' \
	protector-make

protector-make:
	@$(MAKE) opt='$(opt)' CXFLAGS='$(CXFLAGS)' CFLAGS='$(CFLAGS)' protector



pgouse: $(protectorobjects)
	$(LN) -prof-use -O3 -Wall -ansi -pedantic -Wno-long-long -pthread   -DNDEBUG -o Protector $(protectorobjects)

all:
	$(MAKE) clean
	$(MAKE) protector
	$(MAKE) clean

debug:
	$(MAKE) clean
	$(MAKE) protectordbg
	$(MAKE) clean

protector_pgo:
	$(MAKE) clean
	$(MAKE) -j CFLAGS+='-prof-gen  -Wall -ansi -pedantic -Wno-long-long -pthread -ipo -axCORE-AVX2,CORE-AVX-1,AVX,SSE4.2,SSE4.1,SSSE3 -O2   -DNDEBUG' \
#LDFLAGS=+ '-pthread -lstdc++' \
	rm -f *.o

protector_use:
	$(MAKE) clean
	$(MAKE) -j CFLAGS='  -Wall -ansi -pedantic -Wno-long-long -pthread -ipo -axCORE-AVX2,CORE-AVX-1,AVX,SSE4.2,SSE4.1,SSSE3 -O2 -prof-use -DNDEBUG'



#$(MAKE) clean

.PHONY: clean
clean:
	$(CLEAN_CMD)
